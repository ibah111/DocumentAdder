// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using DatabaseContact.DatabaseContact;
using DatabaseContact.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

#nullable disable

namespace DatabaseContact.DatabaseContact.Configurations
{
    public partial class PortfolioConfiguration : IEntityTypeConfiguration<Portfolio>
    {
        public void Configure(EntityTypeBuilder<Portfolio> entity)
        {
            entity.HasKey(e => e.id).HasName("portfolio_PK");

            entity.ToTable("portfolio", tb => tb.HasComment("информация о портфеле"));

            entity.Property(e => e.id).HasComment("");
            entity.Property(e => e.Direction).HasComment("Направление портфеля словарь D");
            entity.Property(e => e.aggressive_plan).HasComment("агрессивный план");
            entity.Property(e => e.auto_fix_period).HasComment("период, после которого операто");
            entity.Property(e => e.auto_user_id).HasComment("Оператор по умолчанию для порт");
            entity.Property(e => e.code).HasComment("номер портфеля");
            entity.Property(e => e.code2).HasComment("номер раздела портфеля");
            entity.Property(e => e.contract_info).HasComment("информация о договоре с банком");
            entity.Property(e => e.contract_typ).HasComment("Тип договора (Цессия\\Агентский");
            entity.Property(e => e.debt_typ).HasComment("тип долгов портфеля (словарь №");
            entity.Property(e => e.dsc).HasComment("комментарий");
            entity.Property(e => e.end_date).HasComment("дата окончания");
            entity.Property(e => e.forecast).HasComment("прогноз взыскания");
            entity.Property(e => e.grade).HasComment("Классификация (Подразделение) ");
            entity.Property(e => e.group_index).HasComment("код группы");
            entity.Property(e => e.id_).HasComment("ID в главной БД");
            entity.Property(e => e.name).HasComment("название портфеля");
            entity.Property(e => e.objective_plan).HasComment("целевой план");
            entity.Property(e => e.parent_id).HasComment("ссылка на банк");
            entity.Property(e => e.payments_until_dt).HasComment("окончание даты учета платежеа ");
            entity.Property(e => e.prior).HasComment("приоритет");
            entity.Property(e => e.provided_legal).HasComment("предусмотрен legal");
            entity.Property(e => e.purchase_price).HasComment("стоимость покупки");
            entity.Property(e => e.r_calc_rule_id).HasComment("ссылка на portfolio_calc_rule");
            entity.Property(e => e.r_com_rule_id).HasComment("ссылка правило расчета комисси");
            entity.Property(e => e.r_formula_id).HasComment("ссылка на формулу (для комисси");
            entity.Property(e => e.r_package_id).HasComment("ссылка на package");
            entity.Property(e => e.real_load_dt).HasComment("дата начала работ");
            entity.Property(e => e.sale_price).HasComment("стоимость продажи");
            entity.Property(e => e.sector).HasComment("Вид деятельности (словарь №104");
            entity.Property(e => e.sign_date).HasComment("дата подписания");
            entity.Property(e => e.status).HasComment("статус (словарь №57)");
            entity.Property(e => e.success_coeff).HasComment("коэффициент успешности");
            entity.Property(e => e.typ).HasComment("тип портфеля (словарь №58)");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<Portfolio> entity);
    }
}
