// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using DatabaseContact.DatabaseContact;
using DatabaseContact.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

#nullable disable

namespace DatabaseContact.DatabaseContact.Configurations
{
    public partial class DocAttachConfiguration : IEntityTypeConfiguration<DocAttach>
    {
        public void Configure(EntityTypeBuilder<DocAttach> entity)
        {
            entity.HasKey(e => e.id).IsClustered(false);

            entity.ToTable("doc_attach", tb =>
            {
                tb.HasComment("");
                tb.HasTrigger("tr_doc_attach_aiu");
            });

            entity.HasIndex(e => new { e.obj_id, e.r_id }, "IX_doc_attach_obj_id&r_id").IsClustered();

            entity.Property(e => e.id).HasComment("");
            entity.Property(e => e.CHANGE_DT).HasComment("дата последнего изменения");
            entity.Property(e => e.DICT_VALUE_1).HasComment("Техническое поле типа словарь 1");
            entity.Property(e => e.DOC_SIZE).HasComment("размер файла");
            entity.Property(e => e.DSC).HasComment("Комментарий");
            entity.Property(e => e.DT_VALUE_1).HasComment("Техническое поле типа дата 1");
            entity.Property(e => e.EXTENSION).HasComment("Расширение файла");
            entity.Property(e => e.EXT_ID).HasComment("Идентификатор во внешней системе");
            entity.Property(e => e.FILE_SERVER_NAME).HasComment("наименование файла на сервере ");
            entity.Property(e => e.FROM_DT).HasComment("Дата начала действия");
            entity.Property(e => e.ORIGIN_OBJ).HasComment("источник возникновения документа (ссылка на table_spec)");
            entity.Property(e => e.REL_SERVER_PATH).HasComment("относительный путь к файлу на  на сервере (например, 000/001)");
            entity.Property(e => e.R_FOLDER_ID).HasComment("Ссылка на папку");
            entity.Property(e => e.R_ORIGIN_ID).HasComment("ссылка на запись в источнике");
            entity.Property(e => e.SAVE_MODE).HasComment("Режим хранения файла (1 – в БД, 2 – в директории на сервере, 3 – другое (клиентский вариант))");
            entity.Property(e => e.TO_DT).HasComment("Дата окончания действия");
            entity.Property(e => e.attach_typ).HasComment("словарь №100");
            entity.Property(e => e.dt).HasComment("дата");
            entity.Property(e => e.filebody).HasComment("файл");
            entity.Property(e => e.filename).HasComment("имя файла");
            entity.Property(e => e.is_active).HasComment("является ли активным");
            entity.Property(e => e.name).HasComment("имя документа");
            entity.Property(e => e.number).HasComment("номер");
            entity.Property(e => e.obj_id).HasComment("ссылка table_spec");
            entity.Property(e => e.r_id).HasComment("ссылка на запись");
            entity.Property(e => e.vers1).HasComment("версия");
            entity.Property(e => e.vers2).HasComment("версия");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<DocAttach> entity);
    }
}
