// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using DatabaseContact.DatabaseContact;
using DatabaseContact.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

#nullable disable

namespace DatabaseContact.DatabaseContact.Configurations
{
    public partial class AddressConfiguration : IEntityTypeConfiguration<Address>
    {
        public void Configure(EntityTypeBuilder<Address> entity)
        {
            entity.HasKey(e => e.id).HasName("address_PK");

            entity.ToTable("address", tb =>
            {
                tb.HasComment("информация об адресе должника");
                tb.HasTrigger("tr_address_aiu");
                tb.HasTrigger("tr_address_aiud");
            });

            entity.Property(e => e.id).HasComment("");
            entity.Property(e => e.BLOCK_DT).HasComment("дата блокировки");
            entity.Property(e => e.BLOCK_REASON).HasComment("причина блокировки (словарь 314)");
            entity.Property(e => e.DICT_VALUE_1).HasComment("Словарный атрибут адреса 1. Ссылка на словарь 372");
            entity.Property(e => e.DICT_VALUE_2).HasComment("Словарный атрибут адреса 2. Ссылка на словарь 373");
            entity.Property(e => e.DICT_VALUE_3).HasComment("Словарный атрибут адреса 3. Ссылка на словарь 374");
            entity.Property(e => e.EXT_ID_).HasComment("используется в ETL");
            entity.Property(e => e.FIAS_CODE).HasComment("Код ФИАС");
            entity.Property(e => e.R_USER_ID).HasComment("ID пользователя, который добавил запись");
            entity.Property(e => e.block_flag).HasComment("признак \"блокировать\"");
            entity.Property(e => e.building).HasComment("корпус");
            entity.Property(e => e.city).HasComment("город");
            entity.Property(e => e.country).HasComment("страна");
            entity.Property(e => e.dataq_state).HasComment("статус адреса (словарь № 72)");
            entity.Property(e => e.district).HasComment("район");
            entity.Property(e => e.dsc).HasComment("комментарий");
            entity.Property(e => e.flat).HasComment("квартира");
            entity.Property(e => e.full_adr).HasComment("полный текст адреса");
            entity.Property(e => e.house).HasComment("дом");
            entity.Property(e => e.id_).HasComment("ID в главной БД");
            entity.Property(e => e.index_code).HasComment("индекс");
            entity.Property(e => e.is_residence).HasComment("флаг проживает");
            entity.Property(e => e.is_returned).HasComment("признак возвращенного письма");
            entity.Property(e => e.last_dt).HasComment("дата последнего выезда");
            entity.Property(e => e.load_dt).HasComment("дата загрузки адреса");
            entity.Property(e => e.modify_dt).HasComment("дата изменения");
            entity.Property(e => e.oblast).HasComment("область");
            entity.Property(e => e.okato).HasComment("окато");
            entity.Property(e => e.parent_id).HasComment("ссылка на person");
            entity.Property(e => e.r_debt_guarantor_id).HasComment("ссылка на debt_guarantor");
            entity.Property(e => e.r_kladr_id).HasComment("ссылка на KLADR");
            entity.Property(e => e.r_kladr_street_id).HasComment("полный код KLADR (17 символов)");
            entity.Property(e => e.r_person_property_id).HasComment("ссылка на person_property");
            entity.Property(e => e.r_street_id).HasComment("улица по справочнику");
            entity.Property(e => e.status).HasComment("статус (словарь №63)");
            entity.Property(e => e.street).HasComment("улица");
            entity.Property(e => e.text_flag).HasComment("признак, что адрес загружен ст");
            entity.Property(e => e.typ).HasComment("тип (словарь №5)");
            entity.Property(e => e.verification_dt).HasComment("дата верификации адреса");
            entity.Property(e => e.visit_state).HasComment("1-необходим выезд, 2-подготовл");
            entity.Property(e => e.visit_time).HasComment("дата, когда необходимо сделать");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<Address> entity);
    }
}
