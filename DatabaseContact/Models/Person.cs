// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable enable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace DatabaseContact.Models;

[Index("r_passport_id", Name = "IX_person_r_passport_id")]
[Table("person")]
public partial class Person
{
    [Key]
    public int id { get; set; }

    /// <summary>
    /// фамилия
    /// </summary>
    [StringLength(256)]
    [Unicode(false)]
    public string? f { get; set; }

    /// <summary>
    /// имя
    /// </summary>
    [StringLength(160)]
    [Unicode(false)]
    public string? i { get; set; }

    /// <summary>
    /// отчество
    /// </summary>
    [StringLength(160)]
    [Unicode(false)]
    public string? o { get; set; }

    /// <summary>
    /// дата рождения
    /// </summary>
    [Column(TypeName = "datetime")]
    public DateTime? birth_date { get; set; }

    /// <summary>
    /// важность персоны
    /// </summary>
    public int? importance { get; set; }

    /// <summary>
    /// порядочность
    /// </summary>
    public int? decency { get; set; }

    /// <summary>
    /// ссылка на паспорт
    /// </summary>
    public int? r_passport_id { get; set; }

    [ForeignKey(nameof(r_passport_id))]
    [InverseProperty(nameof(Models.Passport.Person))]
    public virtual Passport? Passport { get; set; }

    /// <summary>
    /// название компании
    /// </summary>
    [StringLength(128)]
    [Unicode(false)]
    public string? company_name { get; set; }

    /// <summary>
    /// должность
    /// </summary>
    [StringLength(500)]
    [Unicode(false)]
    public string? position { get; set; }

    /// <summary>
    /// комментарий
    /// </summary>
    [StringLength(4000)]
    [Unicode(false)]
    public string? dsc { get; set; }

    /// <summary>
    /// подразделение (soft, hard, exe
    /// </summary>
    [StringLength(16)]
    [Unicode(false)]
    public string? depart { get; set; }

    /// <summary>
    /// семейное положение (словарь №1
    /// </summary>
    public int? family_status { get; set; }

    /// <summary>
    /// пол
    /// </summary>
    [StringLength(1)]
    [Unicode(false)]
    public string? sex { get; set; }

    /// <summary>
    /// образование (словарь №38)
    /// </summary>
    public int? education { get; set; }

    /// <summary>
    /// email
    /// </summary>
    [StringLength(64)]
    [Unicode(false)]
    public string? email { get; set; }

    /// <summary>
    /// ID в главной БД
    /// </summary>
    [Column("id$")]
    public int? id_ { get; set; }

    /// <summary>
    /// тип (1 - физ.лицо, 2 - юр.лицо
    /// </summary>
    public int? typ { get; set; }

    /// <summary>
    /// ИНН
    /// </summary>
    [StringLength(16)]
    [Unicode(false)]
    public string? inn { get; set; }

    /// <summary>
    /// КПП
    /// </summary>
    [StringLength(16)]
    [Unicode(false)]
    public string? kpp { get; set; }

    /// <summary>
    /// ОКВЭД
    /// </summary>
    [StringLength(16)]
    [Unicode(false)]
    public string? okved { get; set; }

    /// <summary>
    /// ОКПО
    /// </summary>
    [StringLength(10)]
    [Unicode(false)]
    public string? okpo { get; set; }

    /// <summary>
    /// расчетный счет
    /// </summary>
    [StringLength(20)]
    [Unicode(false)]
    public string? r_account { get; set; }

    /// <summary>
    /// банк
    /// </summary>
    [StringLength(192)]
    [Unicode(false)]
    public string? b_name { get; set; }

    /// <summary>
    /// кор. счет
    /// </summary>
    [StringLength(20)]
    [Unicode(false)]
    public string? k_account { get; set; }

    /// <summary>
    /// БИК
    /// </summary>
    [StringLength(10)]
    [Unicode(false)]
    public string? bik { get; set; }

    /// <summary>
    /// ФИО ген. директора
    /// </summary>
    [StringLength(64)]
    [Unicode(false)]
    public string? director_fio { get; set; }

    /// <summary>
    /// ОГРН
    /// </summary>
    [StringLength(16)]
    [Unicode(false)]
    public string? ogrn { get; set; }

    [Column(TypeName = "datetime")]
    public DateTime? load_dt { get; set; }

    /// <summary>
    /// страничка в интернете
    /// </summary>
    [StringLength(64)]
    [Unicode(false)]
    public string? website { get; set; }

    /// <summary>
    /// комментарий аналитика
    /// </summary>
    [Unicode(false)]
    public string? analyst_dsc { get; set; }

    /// <summary>
    /// доход
    /// </summary>
    [Column(TypeName = "money")]
    public decimal? income { get; set; }

    /// <summary>
    /// Флаг Место работы проверено
    /// </summary>
    public int? flag_workplace_validated { get; set; }

    /// <summary>
    /// место рождения
    /// </summary>
    [StringLength(128)]
    [Unicode(false)]
    public string? birth_place { get; set; }

    [Column("ext_id$")]
    [StringLength(64)]
    public string? ext_id_ { get; set; }

    [Column(TypeName = "datetime")]
    public DateTime? ARCHIVE_DT { get; set; }

    /// <summary>
    /// комментарий ОД
    /// </summary>
    [StringLength(512)]
    public string? DOCFLOW_DSC { get; set; }

    /// <summary>
    /// СНИЛС
    /// </summary>
    [StringLength(16)]
    public string? SNILS { get; set; }

    /// <summary>
    /// Дата смерти
    /// </summary>
    [Column(TypeName = "datetime")]
    public DateTime? DEATH_DT { get; set; }

    [Column(TypeName = "datetime")]
    public DateTime? death_date { get; set; }
    [InverseProperty(nameof(Debt.Person))]
    public virtual List<Debt> Debts { get; set; } = new List<Debt>();

    [InverseProperty(nameof(LawAct.Person))]
    public virtual List<LawAct> LawActs { get; set; } = new();

    [InverseProperty(nameof(LawExec.Person))]
    public virtual List<LawExec> LawExecs { get; set; } = new();

    [InverseProperty(nameof(Address.Person))]
    public virtual List<Address> Addresses { get; set; } = new();
}